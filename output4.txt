instruction memory:
	instrMem[ 0 ]	= 0x0082000a	= 8519690	= lw 0 2 10
	instrMem[ 1 ]	= 0x0082000b	= 8519691	= lw 0 2 11
	instrMem[ 2 ]	= 0x0093000b	= 9633803	= lw 2 3 11
	instrMem[ 3 ]	= 0x00130002	= 1245186	= add 2 3 2
	instrMem[ 4 ]	= 0x001a0003	= 1703939	= add 3 2 3
	instrMem[ 5 ]	= 0x01130003	= 18022403	= beq 2 3 3
	instrMem[ 6 ]	= 0x001a0002	= 1703938	= add 3 2 2
	instrMem[ 7 ]	= 0x01c00000	= 29360128	= noop
	instrMem[ 8 ]	= 0x01c00000	= 29360128	= noop
	instrMem[ 9 ]	= 0x01800000	= 25165824	= halt
	instrMem[ 10 ]	= 0x00000005	= 5	= add 0 0 5
	instrMem[ 11 ]	= 0x00000006	= 6	= add 0 0 6

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state
correct field here
0
29360128

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		pcPlus1 = 1
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state
correct field here
0
29360128

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8519691 ( lw 0 2 11 )
		pcPlus1 = 2
	ID/EX pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 10
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 9633803 ( lw 2 3 11 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 8519691 ( lw 0 2 11 )
		pcPlus1 = 2
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 11
	EX/MEM pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		branchTarget 11 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 10
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 4 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 9633803 ( lw 2 3 11 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 3 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 11 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8519691 ( lw 0 2 11 )
		branchTarget 13 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 11
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		writeData = 5
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state
correct field here
0
29360128

@@@
state before cycle 5 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 5
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1245186 ( add 2 3 2 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 9633803 ( lw 2 3 11 )
		pcPlus1 = 3
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 11
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 14 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8519691 ( lw 0 2 11 )
		writeData = 6
	WB/END pipeline register:
		instruction = 8519690 ( lw 0 2 10 )
		writeData = 5
end state
PotentialDataDependacy here
2

@@@
state before cycle 6 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 6
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1245186 ( add 2 3 2 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 4 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 11 (Don't Care)
	EX/MEM pipeline register:
		instruction = 9633803 ( lw 2 3 11 )
		branchTarget 14 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 17
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 6 (Don't Care)
	WB/END pipeline register:
		instruction = 8519691 ( lw 0 2 11 )
		writeData = 6
end state
PotentialDataDependacy here
2
correct field here
0
8519691

@@@
state before cycle 7 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 6
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1703939 ( add 3 2 3 )
		pcPlus1 = 5
	ID/EX pipeline register:
		instruction = 1245186 ( add 2 3 2 )
		pcPlus1 = 4
		readRegA = 6
		readRegB = 0
		offset = 2 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 15 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 9633803 ( lw 2 3 11 )
		writeData = 0
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 6 (Don't Care)
end state
correct field here
3
29360128

@@@
state before cycle 8 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 6
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 18022403 ( beq 2 3 3 )
		pcPlus1 = 6
	ID/EX pipeline register:
		instruction = 1703939 ( add 3 2 3 )
		pcPlus1 = 5
		readRegA = 0
		readRegB = 6
		offset = 3 (Don't Care)
	EX/MEM pipeline register:
		instruction = 1245186 ( add 2 3 2 )
		branchTarget 6 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 6
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 9633803 ( lw 2 3 11 )
		writeData = 0
end state
PotentialDataDependacy here
3
correct field here
2
9633803
Write Value here
0

@@@
state before cycle 9 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 6
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1703938 ( add 3 2 2 )
		pcPlus1 = 7
	ID/EX pipeline register:
		instruction = 18022403 ( beq 2 3 3 )
		pcPlus1 = 6
		readRegA = 6
		readRegB = 0
		offset = 3
	EX/MEM pipeline register:
		instruction = 1703939 ( add 3 2 3 )
		branchTarget 8 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 6
		readRegB = 6 (Don't Care)
	MEM/WB pipeline register:
		instruction = 1245186 ( add 2 3 2 )
		writeData = 6
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state
correct field here
3
29360128

@@@
state before cycle 10 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 6
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 8 (Don't Care)
	ID/EX pipeline register:
		instruction = 1703938 ( add 3 2 2 )
		pcPlus1 = 7
		readRegA = 0
		readRegB = 6
		offset = 2 (Don't Care)
	EX/MEM pipeline register:
		instruction = 18022403 ( beq 2 3 3 )
		branchTarget 9
		eq ? True
		aluResult = 12 (Don't Care)
		readRegB = 6 (Don't Care)
	MEM/WB pipeline register:
		instruction = 1703939 ( add 3 2 3 )
		writeData = 6
	WB/END pipeline register:
		instruction = 1245186 ( add 2 3 2 )
		writeData = 6
end state
correct field here
2
1245186
Write Value here
6

@@@
state before cycle 11 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 6
		reg[ 3 ] = 6
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 9 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 8 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 9 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 12 (Don't Care)
		readRegB = 6 (Don't Care)
	MEM/WB pipeline register:
		instruction = 18022403 ( beq 2 3 3 )
		writeData = 6 (Don't Care)
	WB/END pipeline register:
		instruction = 1703939 ( add 3 2 3 )
		writeData = 6
end state
correct field here
0
1703939

@@@
state before cycle 12 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 6
		reg[ 3 ] = 6
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 10
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 9 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 8 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 6 (Don't Care)
	WB/END pipeline register:
		instruction = 18022403 ( beq 2 3 3 )
		writeData = 6 (Don't Care)
end state
correct field here
0
18022403

@@@
state before cycle 13 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 6
		reg[ 3 ] = 6
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 5 ( add 0 0 5 )
		pcPlus1 = 11
	ID/EX pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 10
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 9 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 6 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 6 (Don't Care)
end state
correct field here
0
29360128

@@@
state before cycle 14 starts:
	pc = 12
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 6
		reg[ 3 ] = 6
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 6 ( add 0 0 6 )
		pcPlus1 = 12
	ID/EX pipeline register:
		instruction = 5 ( add 0 0 5 )
		pcPlus1 = 11
		readRegA = 0
		readRegB = 0
		offset = 5 (Don't Care)
	EX/MEM pipeline register:
		instruction = 25165824 ( halt )
		branchTarget 10 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 6 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 6 (Don't Care)
end state
correct field here
0
29360128
Machine halted
Total of 15 cycles executed
Final state of machine:

@@@
state before cycle 15 starts:
	pc = 13
	data memory:
		dataMem[ 0 ] = 8519690
		dataMem[ 1 ] = 8519691
		dataMem[ 2 ] = 9633803
		dataMem[ 3 ] = 1245186
		dataMem[ 4 ] = 1703939
		dataMem[ 5 ] = 18022403
		dataMem[ 6 ] = 1703938
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 29360128
		dataMem[ 9 ] = 25165824
		dataMem[ 10 ] = 5
		dataMem[ 11 ] = 6
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 6
		reg[ 3 ] = 6
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0 ( add 0 0 0 )
		pcPlus1 = 13
	ID/EX pipeline register:
		instruction = 6 ( add 0 0 6 )
		pcPlus1 = 12
		readRegA = 0
		readRegB = 0
		offset = 6 (Don't Care)
	EX/MEM pipeline register:
		instruction = 5 ( add 0 0 5 )
		branchTarget 16 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 25165824 ( halt )
		writeData = 6 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 6 (Don't Care)
end state
