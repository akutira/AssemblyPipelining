instruction memory:
	instrMem[ 0 ]	= 0x00850008	= 8716296	= lw 0 5 8
	instrMem[ 1 ]	= 0x01050005	= 17104901	= beq 0 5 5
	instrMem[ 2 ]	= 0x00810009	= 8454153	= lw 0 1 9
	instrMem[ 3 ]	= 0x00090002	= 589826	= add 1 1 2
	instrMem[ 4 ]	= 0x000d0001	= 851969	= add 1 5 1
	instrMem[ 5 ]	= 0x00420003	= 4325379	= nor 0 2 3
	instrMem[ 6 ]	= 0x00c10009	= 12648457	= sw 0 1 9
	instrMem[ 7 ]	= 0x01800000	= 25165824	= halt
	instrMem[ 8 ]	= 0xffffffff	= -1	= .fill -1
	instrMem[ 9 ]	= 0x00000004	= 4	= add 0 0 4

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state
correct field here
0
29360128

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8716296 ( lw 0 5 8 )
		pcPlus1 = 1
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state
correct field here
0
29360128

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 17104901 ( beq 0 5 5 )
		pcPlus1 = 2
	ID/EX pipeline register:
		instruction = 8716296 ( lw 0 5 8 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 8
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 17104901 ( beq 0 5 5 )
		pcPlus1 = 2
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 2 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 8 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8716296 ( lw 0 5 8 )
		branchTarget 9 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 8
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state
correct field here
0
29360128

@@@
state before cycle 4 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 17104901 ( beq 0 5 5 )
		pcPlus1 = 2
		readRegA = 0
		readRegB = 0
		offset = 5
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 10 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8716296 ( lw 0 5 8 )
		writeData = -1
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state
correct field here
5
29360128

@@@
state before cycle 5 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = -1
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 589826 ( add 1 1 2 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		pcPlus1 = 3
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 9
	EX/MEM pipeline register:
		instruction = 17104901 ( beq 0 5 5 )
		branchTarget 7
		eq ? False
		aluResult = -1 (Don't Care)
		readRegB = -1 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = -1 (Don't Care)
	WB/END pipeline register:
		instruction = 8716296 ( lw 0 5 8 )
		writeData = -1
end state
PotentialDataDependacy here
5

@@@
state before cycle 6 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = -1
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 589826 ( add 1 1 2 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 4 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 9 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		branchTarget 12 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 9
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 17104901 ( beq 0 5 5 )
		writeData = -1 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = -1 (Don't Care)
end state
correct field here
0
29360128

@@@
state before cycle 7 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = -1
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 851969 ( add 1 5 1 )
		pcPlus1 = 5
	ID/EX pipeline register:
		instruction = 589826 ( add 1 1 2 )
		pcPlus1 = 4
		readRegA = 0
		readRegB = 0
		offset = 2 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 13 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		writeData = 4
	WB/END pipeline register:
		instruction = 17104901 ( beq 0 5 5 )
		writeData = -1 (Don't Care)
end state
correct field here
1
17104901

@@@
state before cycle 8 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 4
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = -1
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 4325379 ( nor 0 2 3 )
		pcPlus1 = 6
	ID/EX pipeline register:
		instruction = 851969 ( add 1 5 1 )
		pcPlus1 = 5
		readRegA = 0
		readRegB = -1
		offset = 1 (Don't Care)
	EX/MEM pipeline register:
		instruction = 589826 ( add 1 1 2 )
		branchTarget 6 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 8
		readRegB = 4 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 4 (Don't Care)
	WB/END pipeline register:
		instruction = 8454153 ( lw 0 1 9 )
		writeData = 4
end state
PotentialDataDependacy here
1
correct field here
5
8454153
Write Value here
4

@@@
state before cycle 9 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 4
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = -1
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 12648457 ( sw 0 1 9 )
		pcPlus1 = 7
	ID/EX pipeline register:
		instruction = 4325379 ( nor 0 2 3 )
		pcPlus1 = 6
		readRegA = 0
		readRegB = 0
		offset = 3 (Don't Care)
	EX/MEM pipeline register:
		instruction = 851969 ( add 1 5 1 )
		branchTarget 6 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 3
		readRegB = -1 (Don't Care)
	MEM/WB pipeline register:
		instruction = 589826 ( add 1 1 2 )
		writeData = 8
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 4 (Don't Care)
end state
correct field here
2
29360128

@@@
state before cycle 10 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 4
		reg[ 2 ] = 8
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = -1
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 8
	ID/EX pipeline register:
		instruction = 12648457 ( sw 0 1 9 )
		pcPlus1 = 7
		readRegA = 0
		readRegB = 4
		offset = 9
	EX/MEM pipeline register:
		instruction = 4325379 ( nor 0 2 3 )
		branchTarget 9 (Don't Care)
		eq ? False (Don't Care)
		aluResult = -9
		readRegB = 8 (Don't Care)
	MEM/WB pipeline register:
		instruction = 851969 ( add 1 5 1 )
		writeData = 3
	WB/END pipeline register:
		instruction = 589826 ( add 1 1 2 )
		writeData = 8
end state
correct field here
1
589826

@@@
state before cycle 11 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 3
		reg[ 2 ] = 8
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = -1
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = -1 ( .fill -1 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 8
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 12648457 ( sw 0 1 9 )
		branchTarget 16 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 9
		readRegB = 3
	MEM/WB pipeline register:
		instruction = 4325379 ( nor 0 2 3 )
		writeData = -9
	WB/END pipeline register:
		instruction = 851969 ( add 1 5 1 )
		writeData = 3
end state
correct field here
0
851969

@@@
state before cycle 12 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 3
		reg[ 2 ] = 8
		reg[ 3 ] = -9
		reg[ 4 ] = 0
		reg[ 5 ] = -1
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 4 ( add 0 0 4 )
		pcPlus1 = 10
	ID/EX pipeline register:
		instruction = -1 ( .fill -1 )
		pcPlus1 = 9
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = -1 (Don't Care)
	EX/MEM pipeline register:
		instruction = 25165824 ( halt )
		branchTarget 8 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 12648457 ( sw 0 1 9 )
		writeData = -9 (Don't Care)
	WB/END pipeline register:
		instruction = 4325379 ( nor 0 2 3 )
		writeData = -9
end state
correct field here
7
4325379
Machine halted
Total of 13 cycles executed
Final state of machine:

@@@
state before cycle 13 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 8716296
		dataMem[ 1 ] = 17104901
		dataMem[ 2 ] = 8454153
		dataMem[ 3 ] = 589826
		dataMem[ 4 ] = 851969
		dataMem[ 5 ] = 4325379
		dataMem[ 6 ] = 12648457
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = -1
		dataMem[ 9 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 3
		reg[ 2 ] = 8
		reg[ 3 ] = -9
		reg[ 4 ] = 0
		reg[ 5 ] = -1
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0 ( add 0 0 0 )
		pcPlus1 = 11
	ID/EX pipeline register:
		instruction = 4 ( add 0 0 4 )
		pcPlus1 = 10
		readRegA = 0
		readRegB = 0
		offset = 4 (Don't Care)
	EX/MEM pipeline register:
		instruction = -1 ( .fill -1 )
		branchTarget 8 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 25165824 ( halt )
		writeData = -9 (Don't Care)
	WB/END pipeline register:
		instruction = 12648457 ( sw 0 1 9 )
		writeData = -9 (Don't Care)
end state
